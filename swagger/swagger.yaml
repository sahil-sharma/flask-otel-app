openapi: 3.0.0
info:
  title: CRUD App API
  description: Simple CRUD API with JWT Auth, Prometheus metrics, and optional tracing
  version: 1.0.0

servers:
  - url: http://app.local.io:32080

paths:
  /signup:
    post:
      summary: Sign up a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required: [username, password]
      responses:
        '200':
          description: User created

  /login:
    post:
      summary: Login to get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required: [username, password]
      responses:
        '200':
          description: JWT returned

  /items/all:
    get:
      summary: List all items
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of items
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string

  /items/create:
    post:
      summary: Create a new item
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required: [name, description]
      responses:
        '201':
          description: Item created

  /items:
    get:
      summary: Get item by ID
      parameters:
        - name: item_id
          in: query
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Single item data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
        '400':
          description: Missing item_id
        '404':
          description: Item not found
  
  /items/update:
    put:
      summary: Update item by ID
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Item updated

    /items/delete:
    delete:
      summary: Delete item by ID
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Item deleted

  /external:
    get:
      summary: Make external HTTP call
      responses:
        '200':
          description: External call result

  /healthz:
    get:
      summary: Health check
      responses:
        '200':
          description: Healthy
        '500':
          description: Unhealthy

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
