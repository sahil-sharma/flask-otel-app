docker run -d --name flask-pg-container -e POSTGRES_USER=myuser -e POSTGRES_PASSWORD=mypassword -e POSTGRES_DB=flaskdb -p 5432:5432 -v /tmp/flask-crud-app-data:/var/lib/postgresql/data -d postgres:15

docker run -d --rm --name otel-container -p 4317:4317 -p 4318:4318 otel/opentelemetry-collector:latest

docker run -d --rm --name flask-app-container \
  -e JWT_SECRET=my-secret \
  -e DATABASE_URL=postgresql://myuser:mypassword@172.17.0.2:5432/flaskdb \
  -e OTLP_ENDPOINT=http://172.17.0.3:4318/v1/traces \
  -p 5000:5000 flaskapp:v4

curl -X GET http://localhost:5000

curl -X POST http://localhost:5000/signup -H "Content-Type: application/json"  -d '{"username": "user1", "password": "user1password"}'

curl -X POST http://localhost:5000/login -H "Content-Type: application/json"  -d '{"username": "user1", "password": "user1password"}'

curl -X POST http://localhost:5000/items  -H "Content-Type: application/json"  -H "Authorization: Bearer $TOKEN" -d '{"name": "item1", "description": "this is item-1"}'

curl -X GET -H "Content-Type: application/json"  -H "Authorization: Bearer $TOKEN" http://localhost:5000/items

curl -X GET -H "Content-Type: application/json"  -H "Authorization: Bearer $TOKEN" http://localhost:5000/external


CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(100) NOT NULL,
    password VARCHAR(100) NOT NULL,
    UNIQUE (username)
);

CREATE TABLE item (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT NOT NULL
);

